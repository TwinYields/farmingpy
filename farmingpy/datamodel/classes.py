# generated by datamodel-codegen:
#   filename:  models.yaml
#   timestamp: 2025-04-07T13:27:57+00:00

from __future__ import annotations

from typing import Any, Optional

from pydantic import BaseModel, Field, confloat


class FertilizerApplication(BaseModel):
    agriparcel: Optional[Any] = Field(None, description='Reference to the AgriParcel')
    application_depth_fert: Optional[Any] = Field(
        None, description='Fertilizer application depth'
    )
    ca_in_applied_fertilizer: Optional[Any] = Field(
        None, description='Ca in applied fertilizer'
    )
    category: Optional[Any] = Field(
        None,
        description='Constant `ManagementActivity` used for querying all operations',
    )
    dateObserved: Optional[Any] = Field(
        None, description='Date when the operation was executed'
    )
    fertiliz_app_name: Optional[Any] = Field(
        None, description='Name or notes for this fertilizer application'
    )
    fertiliz_code_other_elem: Optional[Any] = Field(
        None, description='Fertilizer code for other elements (e.g., Mg for magnesium)'
    )
    fertilization_date: Optional[Any] = Field(None, description='Fertilization date')
    fertilizer_applic_day: Optional[Any] = Field(
        None, description='Fertilizer application day'
    )
    fertilizer_applic_method: Optional[Any] = Field(
        None, description='Fertilizer application method'
    )
    fertilizer_applic_year: Optional[Any] = Field(
        None, description='Fertilizer application year'
    )
    fertilizer_k_applied: Optional[Any] = Field(
        None, description='Potassium in applied fertilizer'
    )
    fertilizer_level: Optional[Any] = Field(
        None, description='Fertilizer level in treatment structure'
    )
    fertilizer_material: Optional[Any] = Field(None, description='Fertilizer material')
    id: Any = Field(..., description='nglsi-id id')
    n_in_applied_fertilizer: Optional[Any] = Field(
        None, description='Nitrogen in applied fertilizer'
    )
    nh4_applied_fertilizer: Optional[Any] = Field(
        None, description='Ammonium in applied fertilizer'
    )
    no3_applied_fertilizer: Optional[Any] = Field(
        None, description='Nitrate applied fertilizer'
    )
    other_elements_appl_fert: Optional[Any] = Field(
        None, description='Other elements in applied fertilizer'
    )
    phosphorus_applied_fert: Optional[Any] = Field(
        None, description='Phosphorus in applied fertilizer'
    )
    spatial_category: Optional[Any] = Field(
        None,
        description='Category of the management activity and related agriparcel. Same management activity is created as both spatial_category h3 and growthfield entities. So duplicates of the activities exist, activities have to be fetched per spatial_category.',
    )
    type: Any = Field(..., description='nglsi-id type, has to be FertilizerApplication')


class HarvestEvent(BaseModel):
    agriparcel: Optional[Any] = Field(None, description='Reference to the AgriParcel')
    category: Optional[Any] = Field(
        None,
        description='Constant `ManagementActivity` used for querying all operations',
    )
    dateObserved: Optional[Any] = Field(
        None, description='Date when the operation was executed'
    )
    harv_operat_main_product: Optional[Any] = Field(
        None, description='Harvest operations, percent economic product harvested'
    )
    harv_operat_size_categor: Optional[Any] = Field(
        None, description='Harvest operations size category'
    )
    harv_operation_byproduct: Optional[Any] = Field(
        None, description='Harvest operations, percent of by-product harvested'
    )
    harvest_amount: Optional[Any] = Field(
        None, description='Harvest, total amount removed as mass'
    )
    harvest_area: Optional[Any] = Field(None, description='Harvest area')
    harvest_crop: Optional[Any] = Field(
        None, description='Harvest operations, crop harvested'
    )
    harvest_cut_height: Optional[Any] = Field(
        None, description='Harvest, height of cut'
    )
    harvest_method: Optional[Any] = Field(None, description='Harvest method')
    harvest_operat_component: Optional[Any] = Field(
        None, description='Harvest operations, crop component harvested'
    )
    harvest_operations_date: Optional[Any] = Field(
        None, description='Harvest operations date, DAP if year = -99'
    )
    harvest_operations_day: Optional[Any] = Field(
        None, description='Harvest operations day, DAP if year = -99'
    )
    harvest_operations_level: Optional[Any] = Field(
        None, description='Harvest operations level, links to HARVEST table'
    )
    harvest_operations_year: Optional[Any] = Field(
        None, description='Harvest operations year'
    )
    harvest_stage: Optional[Any] = Field(
        None, description='Harvest, growth stage of crop at date'
    )
    id: Any = Field(..., description='nglsi-id id')
    spatial_category: Optional[Any] = Field(
        None,
        description='Category of the management activity and related agriparcel. Same management activity is created as both spatial_category h3 and growthfield entities. So duplicates of the activities exist, activities have to be fetched per spatial_category.',
    )
    type: Any = Field(..., description='nglsi-id type, has to be HarvestEvent')


class IrrigationApplication(BaseModel):
    agriparcel: Optional[Any] = Field(None, description='Reference to the AgriParcel')
    bund_height: Optional[Any] = Field(
        None, description='Bund height (e.g., for flooded rice)'
    )
    category: Optional[Any] = Field(
        None,
        description='Constant `ManagementActivity` used for querying all operations',
    )
    dateObserved: Optional[Any] = Field(
        None, description='Date when the operation was executed'
    )
    id: Any = Field(..., description='nglsi-id id')
    irrig_amount_depth: Optional[Any] = Field(
        None, description='Irrigation amount, depth of water'
    )
    irrigation_applic_depth: Optional[Any] = Field(
        None, description='Irrigation application depth (e.g., for depth to drip line)'
    )
    irrigation_date: Optional[Any] = Field(None, description='Irrigation date')
    irrigation_day: Optional[Any] = Field(None, description='Irrigation day')
    irrigation_h2o_n_conc: Optional[Any] = Field(
        None, description='Irrigation water nitrogen concentration'
    )
    irrigation_level: Optional[Any] = Field(
        None, description='Irrigation level, links to IRRIGATIONS table'
    )
    irrigation_operation: Optional[Any] = Field(
        None, description='Irrigation operation (e.g., furrow, sprinkler, dripâ€¦)'
    )
    irrigation_operation_name: Optional[Any] = Field(
        None,
        description='Name of irrigation operation or specific notes about this application',
    )
    irrigation_year: Optional[Any] = Field(
        None, description='Irrigation or water management year'
    )
    spatial_category: Optional[Any] = Field(
        None,
        description='Category of the management activity and related agriparcel. Same management activity is created as both spatial_category h3 and growthfield entities. So duplicates of the activities exist, activities have to be fetched per spatial_category.',
    )
    type: Any = Field(..., description='nglsi-id type, has to be IrrigationApplication')


class OrganicMaterialApplication(BaseModel):
    agriparcel: Optional[Any] = Field(None, description='Reference to the AgriParcel')
    category: Optional[Any] = Field(
        None,
        description='Constant `ManagementActivity` used for querying all operations',
    )
    dateObserved: Optional[Any] = Field(
        None, description='Date when the operation was executed'
    )
    id: Any = Field(..., description='nglsi-id id')
    org_material_appl_depth: Optional[Any] = Field(
        None, description='Organic materials application depth'
    )
    org_material_applic_amnt: Optional[Any] = Field(
        None, description='Organic materials application amount, dry weight basis'
    )
    org_material_applic_date: Optional[Any] = Field(
        None, description='Organic materials application date'
    )
    org_material_applic_day: Optional[Any] = Field(
        None, description='Organic materials application day'
    )
    org_material_applic_meth: Optional[Any] = Field(
        None, description='Organic materials application method'
    )
    org_material_c_to_n: Optional[Any] = Field(
        None, description='Organic materials C:N ratio'
    )
    org_material_cover: Optional[Any] = Field(
        None, description='Organic materials, percent ground covered by organic matter'
    )
    org_material_incorp_perc: Optional[Any] = Field(
        None, description='Organic materials application, fraction incorporporated as %'
    )
    org_material_lignin_conc: Optional[Any] = Field(
        None, description='Organic materials lignin concentration'
    )
    org_materials_applic_lev: Optional[Any] = Field(
        None, description='Organic materials application level, links to OM table'
    )
    org_materials_applic_yr: Optional[Any] = Field(
        None, description='Organic materials application year'
    )
    org_matter_carbon_conc: Optional[Any] = Field(
        None, description='Organic matter or residue added, carbon concentration'
    )
    org_matter_moisture_conc: Optional[Any] = Field(
        None, description='Organic matter or residue added, moisture concentration'
    )
    organic_material: Optional[Any] = Field(
        None, description='Organic material, identifying code'
    )
    organic_material_k_conc: Optional[Any] = Field(
        None, description='Organic materials potasium concentration'
    )
    organic_material_n_conc: Optional[Any] = Field(
        None, description='Organic materials nitrogen concentration'
    )
    organic_material_p_conc: Optional[Any] = Field(
        None, description='Organic materials phosphorus concentration'
    )
    spatial_category: Optional[Any] = Field(
        None,
        description='Category of the management activity and related agriparcel. Same management activity is created as both spatial_category h3 and growthfield entities. So duplicates of the activities exist, activities have to be fetched per spatial_category.',
    )
    type: Any = Field(
        ..., description='nglsi-id type, has to be OrganicMaterialApplication'
    )


class Planting(BaseModel):
    agriparcel: Optional[Any] = Field(None, description='Reference to the AgriParcel')
    category: Optional[Any] = Field(
        None,
        description='Constant `ManagementActivity` used for querying all operations',
    )
    crop_code: Optional[Any] = Field(None, description='ICASA crop code')
    crop_common_name: Optional[Any] = Field(None, description='ICASA crop common name')
    cultivar_name: Optional[Any] = Field(None, description='ICASA cultivar name')
    dateObserved: Optional[Any] = Field(
        None, description='Date when the operation was executed'
    )
    emergence_date: Optional[Any] = Field(None, description='Date of emergence')
    emergence_day: Optional[Any] = Field(
        None, description='Day of year for date of emergence'
    )
    emergence_year: Optional[Any] = Field(
        None, description='Year for date of emergence (growth stage)'
    )
    fertile_tiller_num: Optional[Any] = Field(
        None, description='Fertile tiller number (sorghum)'
    )
    germination: Optional[Any] = Field(
        None, description='Planting material germination'
    )
    id: Any = Field(..., description='nglsi-id id')
    length_sprout_material: Optional[Any] = Field(
        None, description='Planting material sprout length'
    )
    nursery_env_pl_material: Optional[Any] = Field(
        None, description='Transplant nursery environment (mean temperature)'
    )
    plant_pop_at_emergence: Optional[Any] = Field(
        None, description='Plant population at emergence'
    )
    plant_pop_at_planting: Optional[Any] = Field(
        None, description='Plant population at planting'
    )
    planting_date: Optional[Any] = Field(None, description='Planting or sowing date')
    planting_day: Optional[Any] = Field(None, description='Day of planting')
    planting_depth: Optional[Any] = Field(None, description='Planting depth')
    planting_distribution: Optional[Any] = Field(
        None, description='Planting distribution'
    )
    planting_level: Optional[Any] = Field(
        None, description='Planting, level in treatment structure'
    )
    planting_level_name: Optional[Any] = Field(
        None, description='Planting level, name of treatment'
    )
    planting_material: Optional[Any] = Field(None, description='Planting material')
    planting_material_age: Optional[Any] = Field(
        None, description='Planting material age (also used for dormancy adjustments)'
    )
    planting_material_source: Optional[Any] = Field(
        None, description='Source of the planting material'
    )
    planting_material_weight: Optional[Any] = Field(
        None, description='Planting material weight'
    )
    planting_year: Optional[Any] = Field(None, description='Planting year')
    plants_per_hill: Optional[Any] = Field(None, description='Plants per hill')
    row_direction: Optional[Any] = Field(
        None, description='Row direction, degrees from N'
    )
    row_spacing: Optional[Any] = Field(None, description='Row spacing')
    seedbed_density: Optional[Any] = Field(
        None, description='Planting density in nursery seed bed'
    )
    spatial_category: Optional[Any] = Field(
        None,
        description='Category of the management activity and related agriparcel. Same management activity is created as both spatial_category h3 and growthfield entities. So duplicates of the activities exist, activities have to be fetched per spatial_category.',
    )
    transplant_age: Optional[Any] = Field(None, description='Transplant age')
    transplant_date: Optional[Any] = Field(None, description='Transplant date')
    type: Any = Field(..., description='nglsi-id type, has to be Planting')


class TillageEvent(BaseModel):
    agriparcel: Optional[Any] = Field(None, description='Reference to the AgriParcel')
    category: Optional[Any] = Field(
        None,
        description='Constant `ManagementActivity` used for querying all operations',
    )
    dateObserved: Optional[Any] = Field(
        None, description='Date when the operation was executed'
    )
    id: Any = Field(..., description='nglsi-id id')
    spatial_category: Optional[Any] = Field(
        None,
        description='Category of the management activity and related agriparcel. Same management activity is created as both spatial_category h3 and growthfield entities. So duplicates of the activities exist, activities have to be fetched per spatial_category.',
    )
    till_mix_effectiveness: Optional[Any] = Field(
        None, description='Tillage operations mixing effectiveness'
    )
    tillage_date: Optional[Any] = Field(None, description='Tillage date')
    tillage_implement: Optional[Any] = Field(None, description='Tillage implement')
    tillage_level: Optional[Any] = Field(None, description='Tillage operation level')
    tillage_operation_name: Optional[Any] = Field(
        None, description='Tillage operations, name of specific event'
    )
    tillage_operations_day: Optional[Any] = Field(
        None, description='Tillage operations day'
    )
    tillage_operations_depth: Optional[Any] = Field(
        None, description='Tillage operations depth'
    )
    tillage_operations_year: Optional[Any] = Field(
        None, description='Tillage operations year'
    )
    tillage_order: Optional[Any] = Field(
        None, description='Tillage operations order within a single day'
    )
    type: Any = Field(..., description='nglsi-id type, has to be TillageEvent')


class Genotype(BaseModel):
    agriparcel: Optional[Any] = Field(
        None, description='ngsi-ld id of upper level agriparcel'
    )
    crop_ident_icasa: Optional[Any] = Field(
        None, description='Crop (or weed) species identifier'
    )
    cultivar_identifier: Optional[Any] = Field(
        None, description='Cultivar, line or genotype identifier'
    )
    cultivar_name: Optional[Any] = Field(None, description='Cultivar name')
    cultivar_notes: Optional[Any] = Field(None, description='Cultivar notes')
    genotype_level_number: Optional[Any] = Field(
        None, description='Genotype level, as listed in Treatments table under GE'
    )
    id: Optional[Any] = Field(None, description='id')
    relative_maturity: Optional[Any] = Field(None, description='Relative maturity')
    type: Any = Field(..., description='nglsi-id type, has to be Genotype')


class Soil(BaseModel):
    agriparcel: Optional[Any] = Field(
        None, description='ngsi-ld id of upper level agriparcel'
    )
    distrib_restrictions: Optional[Any] = Field(
        None, description='Distribution limitations for the soils data set'
    )
    file_version_sl: Optional[Any] = Field(
        None, description='File version for ICASA standard'
    )
    id: Any = Field(..., description='nglsi-id id')
    revision_date_first_sl: Optional[Any] = Field(
        None, description='Date the file was first created'
    )
    revision_date_latest_sl: Optional[Any] = Field(
        None, description='Date the file was last modified'
    )
    revision_notes_sl: Optional[Any] = Field(
        None, description='Notes describing reasons for the revision'
    )
    soil_citation: Optional[Any] = Field(
        None, description='Full citation for soil data'
    )
    soil_license: Optional[Any] = Field(
        None, description='License associated with soil data'
    )
    soil_notes: Optional[Any] = Field(None, description='Notes describing soil dataset')
    soil_profile_methods: Optional[Any] = Field(
        None, description='General notes on execution of experiment.'
    )
    type: Any = Field(..., description='nglsi-id type, has to be Soil')


class SoilProfile(BaseModel):
    agriparcel: Optional[Any] = Field(
        None, description='ngsi-ld id of upper level agriparcel'
    )
    cona: Optional[Any] = Field(None, description='Apsim Cona soil evaporation ')
    depth_of_topsoil: Optional[Any] = Field(None, description='Thickness of topsoil')
    diffus_const: Optional[Any] = Field(
        None, description='APSIM Evaporative diffusion constant'
    )
    diffus_slope: Optional[Any] = Field(
        None, description='APSIM Evaporative diffusion slope'
    )
    drainage_rate_per_day: Optional[Any] = Field(
        None, description='Drainage rate as fraction per day'
    )
    id: Any = Field(..., description='nglsi-id id')
    latitude_soil_profile: Optional[Any] = Field(
        None, description='Latitude of soil profile site'
    )
    longitude_soil_profile: Optional[Any] = Field(
        None, description='Longitude of soil profile site'
    )
    mineralization_factor: Optional[Any] = Field(
        None, description='Mineralization factor (0 to 1 scale)'
    )
    name_of_soil_profile: Optional[Any] = Field(
        None, description='Name of soil profile'
    )
    ph_buffer_determin_meth: Optional[Any] = Field(
        None, description='pH in buffer determination method'
    )
    phosphorus_determ_method: Optional[Any] = Field(
        None, description='Phosphorus determination method'
    )
    potassium_determ_method: Optional[Any] = Field(
        None, description='Potassium determination method'
    )
    runoff_curve_no_scs: Optional[Any] = Field(
        None, description='Runoff curve no. (Soil Conservation Service)'
    )
    soil_albedo: Optional[Any] = Field(None, description='Soil albedo, dry soil')
    soil_albedo_moist: Optional[Any] = Field(
        None, description='Soil albedo, moist soil'
    )
    soil_classific_system: Optional[Any] = Field(
        None, description='Soil classification system (e.g., FAO, USDA)'
    )
    soil_classification: Optional[Any] = Field(None, description='Soil classification')
    soil_denitrification_fac: Optional[Any] = Field(
        None, description='Soil denitrification factor'
    )
    soil_depth: Optional[Any] = Field(None, description='Soil depth')
    soil_evaporation_limit: Optional[Any] = Field(
        None, description='Soil evaporation, upper limit for stage 1'
    )
    soil_fertility_on_photo: Optional[Any] = Field(
        None, description='Soil fertility effect on photosynthesis (0 to 1 scale)'
    )
    soil_file_id: Optional[Any] = Field(None, description='Soil profile file name')
    soil_id: Optional[Any] = Field(
        None, description='Unique soil identifier linking to SOIL_PROFILES'
    )
    soil_loc_2nd_level: Optional[Any] = Field(
        None,
        description='Second admin level for location of site for soil profile (usually state or province)',
    )
    soil_loc_3rd_level: Optional[Any] = Field(
        None,
        description='Third admin level for location of site for soil profile (usually county or municipality)',
    )
    soil_location_country: Optional[Any] = Field(
        None,
        description='First admin for location of site for soil profile (usually country)',
    )
    soil_profile_id: Optional[Any] = Field(None, description='Soil profile identifier')
    soil_profile_slope: Optional[Any] = Field(
        None, description='Slope where soil profile characterized'
    )
    soil_site: Optional[Any] = Field(
        None, description='Name of site where soil profile data sampled'
    )
    soil_site_elevation: Optional[Any] = Field(
        None, description='Elevation of soil profile site'
    )
    soil_surface_color: Optional[Any] = Field(
        None, description='Surface soil color, moist, using Munsell hue'
    )
    soil_texture: Optional[Any] = Field(None, description='Soil texture')
    summer_u: Optional[Any] = Field(
        None, description='Summer soil evaporation, upper limit for stage 1'
    )
    surface_stones__cover_: Optional[Any] = Field(
        None, alias='surface_stones_(cover)', description='Surface stones (cover)'
    )
    type: Any = Field(..., description='nglsi-id type, has to be SoilProfile')
    winter_u: Optional[Any] = Field(
        None, description='Winter soil evaporation, upper limit for stage 1'
    )


class SoilProfileLayer(BaseModel):
    agriparcel: Optional[Any] = Field(None, description='Reference to the AgriParcel')
    caco3_content: Optional[Any] = Field(None, description='Soil CaCO3 content')
    cation_exchange_capacity: Optional[Any] = Field(
        None, description='Cation exchange capacity'
    )
    date: Optional[Any] = Field(None, description='Date of observation')
    electric_conductivity: Optional[Any] = Field(
        None, description='Electric conductivity'
    )
    grid_id: Optional[Any] = Field(
        None, description='Id of the cell on the chosen grid, e.g. h3 grid id'
    )
    id: Any = Field(..., description='nglsi-id id')
    iron: Optional[Any] = Field(None, description='Iron')
    layer_drainage_rate_per_day: Optional[Any] = Field(
        None, description='Drainage rate as fraction per day, per layer'
    )
    master_horizon: Optional[Any] = Field(None, description='Master horizon')
    nh4soil_kcl: Optional[Any] = Field(
        None, description='NH4 in soil based on KCl extraction, by layer'
    )
    nitrate_kcl: Optional[Any] = Field(
        None, description='Nitrate in soil based on KCl extraction, by layer'
    )
    phosphorus_extractable: Optional[Any] = Field(
        None, description='Phosphorus, extractable'
    )
    phosphorus_iostherm_b: Optional[Any] = Field(
        None, description='Phosphorus iostherm B'
    )
    phosphorus_isotherm_a: Optional[Any] = Field(
        None, description='Phosphorus isotherm A'
    )
    phosphorus_organic: Optional[Any] = Field(None, description='Phosphorus, organic')
    phosphorus_total: Optional[Any] = Field(None, description='Phosphorus, total')
    plant_root_uptake_factor: Optional[Any] = Field(
        None, description='APSIM plant specific water uptake coefficient'
    )
    potassium_exchangeable: Optional[Any] = Field(
        None, description='Potassium, exchangeable'
    )
    root_growth_factor_soil: Optional[Any] = Field(
        None, description='Root growth factor, soil only (0 to 1 scale)'
    )
    sat_hydraul_conductivity: Optional[Any] = Field(
        None, description='Saturated hydraulic conductivity'
    )
    soil_active_c: Optional[Any] = Field(
        None, description='Biologically active soil organic carbon by layer'
    )
    soil_active_c_fraction: Optional[Any] = Field(
        None,
        description='Biologically active soil organic carbon by layer, fraction of total organic C',
    )
    soil_adsorption_coef: Optional[Any] = Field(
        None, description='Soil adsorption coefficient (0 to 1 scale)'
    )
    soil_aluminum_conc: Optional[Any] = Field(
        None, description='Soil aluminum concentration in profile described'
    )
    soil_base_saturation: Optional[Any] = Field(
        None, description='Soil base saturation'
    )
    soil_bulk_density_moist: Optional[Any] = Field(
        None, description='Soil bulk density when moist for layer'
    )
    soil_calcium_conc: Optional[Any] = Field(
        None, description='Soil calcium, exchangeable'
    )
    soil_clay_fraction: Optional[Any] = Field(
        None, description='Soil texture, clay (<0.002 mm), weight percent of fine earth'
    )
    soil_coarse_fraction: Optional[Any] = Field(
        None,
        description='Soil texture, coarse fraction (>2 mm), weight percent of fine earth',
    )
    soil_color_moist_munsell: Optional[Any] = Field(
        None, description='Soil color of moist soil using Munsell hue'
    )
    soil_compac_fact_by_lyr: Optional[Any] = Field(
        None, description='Soil compaction factor by layer (0 to 1 scale)'
    )
    soil_file_id: Optional[Any] = Field(None, description='Soil profile file name')
    soil_id: Optional[Any] = Field(
        None, description='Unique soil identifier linking to SOIL_PROFILES'
    )
    soil_inert_c: Optional[Any] = Field(
        None, description='Inert organic carbon by layer'
    )
    soil_inert_c_fraction: Optional[Any] = Field(
        None, description='Inert organic carbon by layer, fraction of total organic C'
    )
    soil_intermediate_c: Optional[Any] = Field(
        None, description='Intermediate soil organic carbon by layer'
    )
    soil_intermediate_c_fraction: Optional[Any] = Field(
        None,
        description='Intermediate soil organic carbon by layer, fraction of total organic C',
    )
    soil_layer_base_depth: Optional[Any] = Field(
        None, description='Soil layer base depth'
    )
    soil_layer_top_depth: Optional[Any] = Field(
        None, description='Soil layer top depth'
    )
    soil_magnesium_conc: Optional[Any] = Field(None, description='Magnesium')
    soil_manganese_conc: Optional[Any] = Field(None, description='Manganese')
    soil_organic_c_perc_layr: Optional[Any] = Field(
        None, description='Total soil organic carbon by layer'
    )
    soil_organic_n_conc: Optional[Any] = Field(
        None, description='Nitrogen, total soil organic'
    )
    soil_ph_in_buffer: Optional[Any] = Field(
        None,
        description='pH of soil measured in buffer solution, from profile description',
    )
    soil_ph_in_water: Optional[Any] = Field(
        None, description='pH of soil in water, from profile description'
    )
    soil_profile_id: Optional[Any] = Field(None, description='Soil profile identifier')
    soil_sand_fraction: Optional[Any] = Field(
        None,
        description='Soil texture, sand (0.05 to 2.0 mm), weight percent of fine earth',
    )
    soil_silt_fraction: Optional[Any] = Field(
        None,
        description='Soil texture, silt (0.05 to 0.002 mm), weight percent of fine earth',
    )
    soil_sodium_conc: Optional[Any] = Field(None, description='Sodium in soil layer')
    soil_stable_c: Optional[Any] = Field(
        None, description='Stable organic carbon by layer'
    )
    soil_stable_c_fraction: Optional[Any] = Field(
        None, description='Stable organic carbon by layer, fraction of total organic C'
    )
    soil_sulphur_conc: Optional[Any] = Field(None, description='Sulphur in soil layer')
    soil_type: Optional[Any] = Field(None, description='Finnish soil type')
    soil_wat_drned_upper_lim: Optional[Any] = Field(
        None, description='Soil water, drained upper limit'
    )
    soil_water_air_dry: Optional[Any] = Field(
        None, description='Soil water content, air dry'
    )
    soil_water_field_cap_1: Optional[Any] = Field(
        None, description='Soil water content at 1/3 atmosphere pressure'
    )
    soil_water_field_cap_2: Optional[Any] = Field(
        None, description='Soil water content at 1/10 atmospheric pressure'
    )
    soil_water_lower_limit: Optional[Any] = Field(
        None, description='Soil water, lower limit'
    )
    soil_water_residual: Optional[Any] = Field(None, description='Soil water, residual')
    soil_water_saturated: Optional[Any] = Field(
        None, description='Soil water, saturated'
    )
    soil_water_uptake_factor: Optional[Any] = Field(
        None, description='Root exploration factor (0 to 1 scale, APSIM XF)'
    )
    soil_water_wilting_pt: Optional[Any] = Field(
        None,
        description='Soil water content (wilting point) at 15 atmosphere pressure ',
    )
    spatial_category: Optional[Any] = Field(
        None,
        description='Category of the soil profile layer and related agriparcel. Same soil profile layer is created as both spatial_category h3 and basefield entities.So duplicates of the soil profile layers exist, soil profile layers have to be fetched per spatial_category.',
    )
    type: Any = Field(..., description='nglsi-id type, has to be SoilProfileLayer')
    van_genuch_alpha: Optional[Any] = Field(
        None, description='Van Genuchten alpha parameter'
    )
    van_genuch_n: Optional[Any] = Field(None, description='Van Genuchten N parameter')
    year: Optional[Any] = Field(None, description='Year of observation')


class Eo(BaseModel):
    agriparcel: Optional[Any] = Field(None, description='Reference to the AgriParcel')
    id: Any = Field(..., description='nglsi-id id')
    leaf_area_index: Optional[Any] = Field(
        None, description='Leaf area index on a given day'
    )
    observation_date: Optional[Any] = Field(
        None, description='Observation date of eo data'
    )
    type: Any = Field(..., description='nglsi-id type, has to be Eo')


class Sample(BaseModel):
    agriparcel: Optional[Any] = Field(None, description='Reference to the AgriParcel')
    grid_id: Optional[Any] = Field(
        None, description='Id to locate sample on chosen grid, e.g. h3 id'
    )
    id: Any = Field(..., description='nglsi-id id')
    location: Optional[Any] = Field(
        None, description='Geometry of the sample, e.g. Point or Polygon'
    )
    sampling_date: Optional[Any] = Field(None, description='Sampling date')
    soil_organic_C_perc_layr: Optional[Any] = Field(
        None,
        description='Total soil organic carbon by layer, expressed as g[C]/100g[soil]',
    )
    soil_organic_matter_layer: Optional[Any] = Field(
        None, description='Total soil organic matter by layer'
    )
    soil_pH_in_buffer: Optional[Any] = Field(
        None,
        description='pH of soil measured in buffer solution, from profile description',
    )
    soil_pH_in_water: Optional[Any] = Field(
        None, description='pH of soil in water, from profile description'
    )
    total_biomass_dry_wt: Optional[Any] = Field(
        None, description='Total biomass without senesced material (dry weight, kg/ha)'
    )
    type: Any = Field(..., description='nglsi-id type, has to be Sample')


class AgriFarm(BaseModel):
    agriparcel: Optional[Any] = Field(
        None, description='ngsi-ld id of upper level agriparcel'
    )
    id: Any = Field(..., description='nglsi-id id')
    legalid: Optional[Any] = Field(None, description='Legal id of the farm')
    type: Any = Field(..., description='nglsi-id type, has to be AgriFarm')


class FieldParcel(BaseModel):
    agriparcel: Optional[Any] = Field(None, description='Reference to the AgriParcel')
    area: Optional[confloat(ge=0.0)] = Field(
        None, description='The area of the parcel nominally in square meters.'
    )
    category: Optional[Any] = Field(
        None, description="Parcel type. 'Enum:' `base`, `growth`, `h3`"
    )
    farm: Optional[str] = Field(None, description='Reference to farm.')
    id: Any = Field(..., description='nglsi-id id')
    location: Optional[Any] = Field(
        None,
        description='GeoProperty. Geojson reference to the item.',
        title='GeoJSON Polygon',
    )
    name: Optional[Any] = Field(None, description='Name of the parcel')
    parcelid: Optional[Any] = Field(None, description='Parcel id')
    resolution: Optional[Any] = Field(
        None, description='Spatial resolution, especially for h3 cells'
    )
    type: Any = Field(..., description='nglsi-id type, has to be FieldParcel')
    year: Optional[Any] = Field(None, description='Registration year')
